@page "/"
@using CustomComponent
@using CustomComponent.Pages.Components
@using CustomComponent.Shared.Classes;
@using CustomComponent.Shared.Classes.Captcha

@* <Editor @bind-Value="editorOptions.InitialText" Options="editorOptions"></Editor> *@
@*<CaptchaFrame captchaOptions="@captchaOptions"></CaptchaFrame>*@
@* <SliderCaptcha></SliderCaptcha> *@
@* <MudPaper Height="400px" Width="100%">
    <MudContainer MaxWidth="MaxWidth.Small">
        <Uploader></Uploader>
    </MudContainer>
</MudPaper> *@
<PriceFieldWithSeparator IsRequired="true" Addronment="ريال" Label="مبلغ ابلاغ شده" RequiredErrorMsg="مبلغ ابلاغ شده نمی تواند خالی باشد." Value="@price" ReturnResultFunc="GetPriceResult"></PriceFieldWithSeparator>
<MudItem>@price</MudItem>
@code {
    EditorOptions editorOptions;
    CaptchaOptions captchaOptions;
    long price = 250000;

    protected override async Task OnInitializedAsync()
    {
        editorOptions = new EditorOptions();
        captchaOptions = new CaptchaOptions();
        captchaOptions.LetterNumber = 4;
        captchaOptions.Type = "letter";
        captchaOptions.Complexity = "easy";
        captchaOptions.Langauge = "Fa";
        // captchaOptions.CharSet = "abcdefghijklmnopqrstuvwxyz";
        // captchaOptions.CharSet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        captchaOptions.CharSet = "ابپتثجچحخدذرزژسشصضطظعغفقکگلمنوهی";
        editorOptions.InitialText = "Welcome to Qaiser Mehmood github editor5-blazor app";
        editorOptions.Toolbar = new Dictionary<string, object>
        {
            { "items", new[] { "code", "codeBlock", "htmlEmbed", "sourceEditing" } }
            //htmlEmbed در بخش آپشن های ادیتور فایل ckeditor.js وجود ندارد
        };
        editorOptions.HtmlEmbed = new HtmlEmbedOptions
            {
                ShowPreviews = true,
                SanitizeHtml = @"
                (inputHtml) => {
                    const outputHtml = sanitize(inputHtml);
                    return {
                        html: outputHtml,
                        hasChanged: true
                    };
                }"
            };
        var txt = await Task.Run(() => 1);
    }

    private void GetPriceResult(long? enteredResult)
    {
        price = enteredResult.Value;
        StateHasChanged();
    }
}
